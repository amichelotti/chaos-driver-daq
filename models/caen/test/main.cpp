// Project UnitServer
// includes the available CU in "driver"
// generated by "chaos_generate_us.sh"


#include <chaos/common/chaos_constants.h>
#include <chaos/cu_toolkit/ChaosCUToolkit.h>
#include <chaos/common/exception/CException.h>

/*** CU Types ****/

#include<driver/daq/models/caen/RTCAEN775.h>
#include<driver/daq/models/caen/RTCAEN965.h>
#include<driver/daq/models/caen/RTCAEN792.h>



int main(int argc,const char**argv){
	try{
		chaos::cu::ChaosCUToolkit::getInstance()->init(argc, argv);
		REGISTER_CU(::driver::daq::caen::RTCAEN775);
		REGISTER_CU(::driver::daq::caen::RTCAEN965);
		REGISTER_CU(::driver::daq::caen::RTCAEN792);


		chaos::cu::ChaosCUToolkit::getInstance()->start();
	} catch (chaos::CException& e) {
		std::cerr<<"Exception:"<<std::endl;
		std::cerr<< "domain	:"<<e.errorDomain << std::endl;
		std::cerr<< "cause	:"<<e.errorMessage << std::endl;return -1;
	} catch (program_options::error &e){
		std::cerr << "Unable to parse command line: " << e.what() << std::endl;return -2;
	} catch (...){
		std::cerr << "unexpected exception caught.. " << std::endl;return -3;
	}
        return 0;
}

